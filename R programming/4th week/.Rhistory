result <- result[order(result[,2], result[,4]),]
resultranks <- subset(result, result[,4] == num, select=cols2)
}
setwd("C:/Users/gasper.stanovnik/Documents/Development/R/datasciencecoursera/R programming/4th week")
## Read outcome data
outcome <- "heart attack"
num <- "worst"
outcomes <- read.csv('outcome-of-care-measures.csv', colClasses = "character")
## Check that state and outcome are valid
options(warn=-1)
outcomes[, 11] <- as.numeric(outcomes[, 11]) # heart attack
outcomes[, 17] <- as.numeric(outcomes[, 17]) # heart failure
outcomes[, 23] <- as.numeric(outcomes[, 23]) # pneumonia
cols2 <- c(colnames(outcomes[2]), colnames(outcomes[7]))
valid <- c("heart attack", "heart failure", "pneumonia")
if (!outcome %in% valid) {
stop("invalid outcome")
}
checker <- function(n = num) {
print(num)
if (num == "worst") {num <<- max(result$rank)}
if (num == "best") {num <<- 1}
if (num > max(result$rank)) {stop("NA")}
print(num)
}
## Return hospital name in that state with the given rank
## 30-day death rate
if (outcome == "heart attack") {
cols <- c(colnames(outcomes[2]), colnames(outcomes[7]), colnames(outcomes[11]))
result <- subset(outcomes, outcomes = "heart attack", select=cols)
result$rank <- ave(result[,3], result[,2], FUN= function(x) rank(x, ties.method = "first"))
checker(num)
result <- result[order(result[,2], result[,4]),]
resultranks <- subset(result, result[,4] == num, select=cols2)
}
rankall <- function(outcome, rank) {
## Read outcome data
outcomes <- read.csv('outcome-of-care-measures.csv', colClasses = "character")
## Check that state and outcome are valid
options(warn=-1)
outcomes[, 11] <- as.numeric(outcomes[, 11]) # heart attack
outcomes[, 17] <- as.numeric(outcomes[, 17]) # heart failure
outcomes[, 23] <- as.numeric(outcomes[, 23]) # pneumonia
cols2 <- c(colnames(outcomes[2]), colnames(outcomes[7]))
valid <- c("heart attack", "heart failure", "pneumonia")
if (!outcome %in% valid) {
stop("invalid outcome")
}
checker <- function(n = num) {
if (num == "worst") {num <<- max(result$rank)}
if (num == "best") {num <<- 1}
if (num > max(result$rank)) {stop("NA")}
}
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
if (outcome == "heart attack") {
cols <- c(colnames(outcomes[2]), colnames(outcomes[7]), colnames(outcomes[11]))
result <- subset(outcomes, outcomes = "heart attack", select=cols)
result$rank <- ave(result[,3], result[,2], FUN= function(x) rank(x, ties.method = "first"))
checker(num)
result <- result[order(result[,2], result[,4]),]
resultranks <- subset(result, result[,4] == num, select=cols2)
}
if (outcome == "heart failure") {
cols <- c(colnames(outcomes[2]), colnames(outcomes[7]), colnames(outcomes[17]))
result <- subset(outcomes, outcomes = "heart failure", select=cols)
result$rank <- ave(result[,3], result[,2], FUN= function(x) rank(x, ties.method = "first"))
checker(num)
result <- result[order(result[,2], result[,4]),]
resultranks <- subset(result, result[,4] == num, select=cols2)
}
if (outcome == "pneumonia") {
cols <- c(colnames(outcomes[2]), colnames(outcomes[7]), colnames(outcomes[23]))
result <- subset(outcomes, outcomes = "pneumonia", select=cols)
result$rank <- ave(result[,3], result[,2], FUN= function(x) rank(x, ties.method = "first"))
checker(num)
result <- result[order(result[,2], result[,4]),]
resultranks <- subset(result, result[,4] == num, select=cols2)
}
return(resultranks)
}
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
rankall("heart attack", 20)
setwd("C:/Users/gasper.stanovnik/Documents/Development/R/datasciencecoursera/R programming/4th week")
## Read outcome data
outcome <- "heart attack"
num <- 20
outcomes <- read.csv('outcome-of-care-measures.csv', colClasses = "character")
## Check that state and outcome are valid
options(warn=-1)
outcomes[, 11] <- as.numeric(outcomes[, 11]) # heart attack
outcomes[, 17] <- as.numeric(outcomes[, 17]) # heart failure
outcomes[, 23] <- as.numeric(outcomes[, 23]) # pneumonia
cols2 <- c(colnames(outcomes[2]), colnames(outcomes[7]))
valid <- c("heart attack", "heart failure", "pneumonia")
if (!outcome %in% valid) {
stop("invalid outcome")
}
checker <- function(n = num) {
if (num == "worst") {num <<- max(result$rank)}
if (num == "best") {num <<- 1}
if (num > max(result$rank)) {stop("NA")}
}
## Return hospital name in that state with the given rank
## 30-day death rate
if (outcome == "heart attack") {
cols <- c(colnames(outcomes[2]), colnames(outcomes[7]), colnames(outcomes[11]))
result <- subset(outcomes, outcomes = "heart attack", select=cols)
result$rank <- ave(result[,3], result[,2], FUN= function(x) rank(x, ties.method = "first"))
checker(num)
result <- result[order(result[,2], result[,4]),]
resultranks <- subset(result, result[,4] == num, select=cols2)
}
if (outcome == "heart failure") {
cols <- c(colnames(outcomes[2]), colnames(outcomes[7]), colnames(outcomes[17]))
result <- subset(outcomes, outcomes = "heart failure", select=cols)
result$rank <- ave(result[,3], result[,2], FUN= function(x) rank(x, ties.method = "first"))
checker(num)
result <- result[order(result[,2], result[,4]),]
resultranks <- subset(result, result[,4] == num, select=cols2)
}
if (outcome == "pneumonia") {
cols <- c(colnames(outcomes[2]), colnames(outcomes[7]), colnames(outcomes[23]))
result <- subset(outcomes, outcomes = "pneumonia", select=cols)
result$rank <- ave(result[,3], result[,2], FUN= function(x) rank(x, ties.method = "first"))
checker(num)
result <- result[order(result[,2], result[,4]),]
resultranks <- subset(result, result[,4] == num, select=cols2)
}
final <- resultranks
View(resultranks)
View(resultranks)
View(final)
View(resultranks)
View(outcomes)
View(result)
resultranks <- subset(result, result[,4] == num, select=cols2)
View(resultranks)
rankall <- function(outcome, rank) {
## Read outcome data
outcomes <- read.csv('outcome-of-care-measures.csv', colClasses = "character")
## Check that state and outcome are valid
options(warn=-1)
outcomes[, 11] <- as.numeric(outcomes[, 11]) # heart attack
outcomes[, 17] <- as.numeric(outcomes[, 17]) # heart failure
outcomes[, 23] <- as.numeric(outcomes[, 23]) # pneumonia
cols2 <- c(colnames(outcomes[2]), colnames(outcomes[7]))
valid <- c("heart attack", "heart failure", "pneumonia")
if (!outcome %in% valid) {
stop("invalid outcome")
}
checker <- function(n = num) {
if (num == "worst") {num <<- max(result$rank)}
if (num == "best") {num <<- 1}
if (num > max(result$rank)) {stop("NA")}
}
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
if (outcome == "heart attack") {
cols <- c(colnames(outcomes[2]), colnames(outcomes[7]), colnames(outcomes[11]))
result <- subset(outcomes, outcomes = "heart attack", select=cols)
result$rank <- ave(result[,3], result[,2], FUN= function(x) rank(x, ties.method = "first"))
checker(num)
result <- result[order(result[,2], result[,4]),]
resultranks <- subset(result, result[,4] == num, select=cols2)
}
if (outcome == "heart failure") {
cols <- c(colnames(outcomes[2]), colnames(outcomes[7]), colnames(outcomes[17]))
result <- subset(outcomes, outcomes = "heart failure", select=cols)
result$rank <- ave(result[,3], result[,2], FUN= function(x) rank(x, ties.method = "first"))
checker(num)
result <- result[order(result[,2], result[,4]),]
resultranks <- subset(result, result[,4] == num, select=cols2)
}
if (outcome == "pneumonia") {
cols <- c(colnames(outcomes[2]), colnames(outcomes[7]), colnames(outcomes[23]))
result <- subset(outcomes, outcomes = "pneumonia", select=cols)
result$rank <- ave(result[,3], result[,2], FUN= function(x) rank(x, ties.method = "first"))
checker(num)
result <- result[order(result[,2], result[,4]),]
resultranks <- subset(result, result[,4] == num, select=cols2)
}
return(resultranks)
}
rankall("heart attack", 20)
rankall("heart attack", 20)
rankall <- function(outcome, num) {
## Read outcome data
outcomes <- read.csv('outcome-of-care-measures.csv', colClasses = "character")
## Check that state and outcome are valid
options(warn=-1)
outcomes[, 11] <- as.numeric(outcomes[, 11]) # heart attack
outcomes[, 17] <- as.numeric(outcomes[, 17]) # heart failure
outcomes[, 23] <- as.numeric(outcomes[, 23]) # pneumonia
cols2 <- c(colnames(outcomes[2]), colnames(outcomes[7]))
valid <- c("heart attack", "heart failure", "pneumonia")
if (!outcome %in% valid) {
stop("invalid outcome")
}
checker <- function(n = num) {
if (num == "worst") {num <<- max(result$rank)}
if (num == "best") {num <<- 1}
if (num > max(result$rank)) {stop("NA")}
}
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
if (outcome == "heart attack") {
cols <- c(colnames(outcomes[2]), colnames(outcomes[7]), colnames(outcomes[11]))
result <- subset(outcomes, outcomes = "heart attack", select=cols)
result$rank <- ave(result[,3], result[,2], FUN= function(x) rank(x, ties.method = "first"))
checker(num)
result <- result[order(result[,2], result[,4]),]
resultranks <- subset(result, result[,4] == num, select=cols2)
}
if (outcome == "heart failure") {
cols <- c(colnames(outcomes[2]), colnames(outcomes[7]), colnames(outcomes[17]))
result <- subset(outcomes, outcomes = "heart failure", select=cols)
result$rank <- ave(result[,3], result[,2], FUN= function(x) rank(x, ties.method = "first"))
checker(num)
result <- result[order(result[,2], result[,4]),]
resultranks <- subset(result, result[,4] == num, select=cols2)
}
if (outcome == "pneumonia") {
cols <- c(colnames(outcomes[2]), colnames(outcomes[7]), colnames(outcomes[23]))
result <- subset(outcomes, outcomes = "pneumonia", select=cols)
result$rank <- ave(result[,3], result[,2], FUN= function(x) rank(x, ties.method = "first"))
checker(num)
result <- result[order(result[,2], result[,4]),]
resultranks <- subset(result, result[,4] == num, select=cols2)
}
return(resultranks)
}
rankall("heart attack", 20)
head(rankall("heart attack", 20), 10)
outcomes <- read.csv('outcome-of-care-measures.csv', colClasses = "character")
checker <- function(n = num) {
if (num == "worst") {num <<- max(result$rank)}
if (num == "best") {num <<- 1}
if (num > max(result$rank)) {stop("NA")}
}
if (outcome == "heart attack") {
cols <- c(colnames(outcomes[2]), colnames(outcomes[7]), colnames(outcomes[11]))
result <- subset(outcomes, outcomes = "heart attack", select=cols)
result$rank <- ave(result[,3], result[,2], FUN= function(x) rank(x, ties.method = "first"))
checker(num)
result <- result[order(result[,2], result[,4]),]
resultranks <- subset(result, result[,4] == num, select=cols2)
}
outcomes[, 11] <- as.numeric(outcomes[, 11]) # heart attack
outcomes[, 17] <- as.numeric(outcomes[, 17]) # heart failure
outcomes[, 23] <- as.numeric(outcomes[, 23]) # pneumonia
outcome <- "heart attack"
num <- 20
if (outcome == "heart attack") {
cols <- c(colnames(outcomes[2]), colnames(outcomes[7]), colnames(outcomes[11]))
result <- subset(outcomes, outcomes = "heart attack", select=cols)
result$rank <- ave(result[,3], result[,2], FUN= function(x) rank(x, ties.method = "first"))
checker(num)
result <- result[order(result[,2], result[,4]),]
resultranks <- subset(result, result[,4] == num, select=cols2)
}
cols2 <- c(colnames(outcomes[2]), colnames(outcomes[7]))
valid <- c("heart attack", "heart failure", "pneumonia")
if (outcome == "heart attack") {
cols <- c(colnames(outcomes[2]), colnames(outcomes[7]), colnames(outcomes[11]))
result <- subset(outcomes, outcomes = "heart attack", select=cols)
result$rank <- ave(result[,3], result[,2], FUN= function(x) rank(x, ties.method = "first"))
checker(num)
result <- result[order(result[,2], result[,4]),]
resultranks <- subset(result, result[,4] == num, select=cols2)
}
View(resultranks)
View(result)
rankall("heart attack", 6)
View(resultranks)
View(result)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("pneumonia", "worst"), 3)
rankall <- function(outcome, num) {
## Read outcome data
outcomes <- read.csv('outcome-of-care-measures.csv', colClasses = "character")
## Check that state and outcome are valid
options(warn=-1)
outcomes[, 11] <- as.numeric(outcomes[, 11]) # heart attack
outcomes[, 17] <- as.numeric(outcomes[, 17]) # heart failure
outcomes[, 23] <- as.numeric(outcomes[, 23]) # pneumonia
cols2 <- c(colnames(outcomes[2]), colnames(outcomes[7]))
valid <- c("heart attack", "heart failure", "pneumonia")
if (!outcome %in% valid) {
stop("invalid outcome")
}
checker <- function(n = num) {
if (num == "worst") {num <<- max(result$rank)}
if (num == "best") {num <<- 1}
if (num > max(result$rank)) {stop("NA")}
}
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
if (outcome == "heart attack") {
cols <- c(colnames(outcomes[2]), colnames(outcomes[7]), colnames(outcomes[11]))
result <- subset(outcomes, outcomes = "heart attack", select=cols)
result$rank <- ave(result[,3], result[,2], FUN= function(x) rank(x, ties.method = "first"))
checker(num)
result <- result[order(result[,2], result[,4]),]
resultranks <- subset(result, result[,4] == num, select=cols2)
}
if (outcome == "heart failure") {
cols <- c(colnames(outcomes[2]), colnames(outcomes[7]), colnames(outcomes[17]))
result <- subset(outcomes, outcomes = "heart failure", select=cols)
result$rank <- ave(result[,3], result[,2], FUN= function(x) rank(x, ties.method = "first"))
checker(num)
result <- result[order(result[,2], result[,4]),]
resultranks <- subset(result, result[,4] == num, select=cols2)
}
if (outcome == "pneumonia") {
cols <- c(colnames(outcomes[2]), colnames(outcomes[7]), colnames(outcomes[23]))
result <- subset(outcomes, outcomes = "pneumonia", select=cols)
result$rank <- ave(result[,3], result[,2], FUN= function(x) rank(x, ties.method = "first"))
checker(num)
result <- result[order(result[,2], result[,4]),]
resultranks <- subset(result, result[,4] == num, select=cols2)
}
return(resultranks)
}
tail(rankall("pneumonia", "worst"), 3)
head(rankall("heart attack", 20), 10)
tail(rankall("heart failure"), 10)
rankall <- function(outcome, num = 1) {
## Read outcome data
outcomes <- read.csv('outcome-of-care-measures.csv', colClasses = "character")
## Check that state and outcome are valid
options(warn=-1)
outcomes[, 11] <- as.numeric(outcomes[, 11]) # heart attack
outcomes[, 17] <- as.numeric(outcomes[, 17]) # heart failure
outcomes[, 23] <- as.numeric(outcomes[, 23]) # pneumonia
cols2 <- c(colnames(outcomes[2]), colnames(outcomes[7]))
valid <- c("heart attack", "heart failure", "pneumonia")
if (!outcome %in% valid) {
stop("invalid outcome")
}
checker <- function(n = num) {
if (num == "worst") {num <<- max(result$rank)}
if (num == "best") {num <<- 1}
if (num > max(result$rank)) {stop("NA")}
}
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
if (outcome == "heart attack") {
cols <- c(colnames(outcomes[2]), colnames(outcomes[7]), colnames(outcomes[11]))
result <- subset(outcomes, outcomes = "heart attack", select=cols)
result$rank <- ave(result[,3], result[,2], FUN= function(x) rank(x, ties.method = "first"))
checker(num)
result <- result[order(result[,2], result[,4]),]
resultranks <- subset(result, result[,4] == num, select=cols2)
}
if (outcome == "heart failure") {
cols <- c(colnames(outcomes[2]), colnames(outcomes[7]), colnames(outcomes[17]))
result <- subset(outcomes, outcomes = "heart failure", select=cols)
result$rank <- ave(result[,3], result[,2], FUN= function(x) rank(x, ties.method = "first"))
checker(num)
result <- result[order(result[,2], result[,4]),]
resultranks <- subset(result, result[,4] == num, select=cols2)
}
if (outcome == "pneumonia") {
cols <- c(colnames(outcomes[2]), colnames(outcomes[7]), colnames(outcomes[23]))
result <- subset(outcomes, outcomes = "pneumonia", select=cols)
result$rank <- ave(result[,3], result[,2], FUN= function(x) rank(x, ties.method = "first"))
checker(num)
result <- result[order(result[,2], result[,4]),]
resultranks <- subset(result, result[,4] == num, select=cols2)
}
return(resultranks)
}
tail(rankall("heart failure"), 10)
tail(rankall("pneumonia", "worst"), 3)
best <- function(state, outcome) {
## Read outcome data
outcomes <- read.csv('outcome-of-care-measures.csv', colClasses = "character")
## Check that state and outcome are valid
options(warn=-1)
outcomes[, 11] <- as.numeric(outcomes[, 11]) # heart attack
outcomes[, 17] <- as.numeric(outcomes[, 17]) # heart failure
outcomes[, 23] <- as.numeric(outcomes[, 23]) # pneumonia
data <- c()
valid <- c("heart attack", "heart failure", "pneumonia")
if (!outcome %in% valid) {
stop("invalid outcome")
}
if (!state %in% outcomes$State) {
stop("invalid state")
}
if (outcome == "heart attack") {
cols <- c(colnames(outcomes[2]), colnames(outcomes[7]), colnames(outcomes[11]))
result <- subset(outcomes, !is.na(outcomes[, 11]) & outcomes[,7] == state, select=cols)
}
if (outcome == "heart failure") {
cols <- c(colnames(outcomes[2]), colnames(outcomes[7]), colnames(outcomes[17]))
result <- subset(outcomes, !is.na(outcomes[, 17]) & outcomes[,7] == state, select=cols)
}
if (outcome == "pneumonia") {
cols <- c(colnames(outcomes[2]), colnames(outcomes[7]), colnames(outcomes[23]))
result <- subset(outcomes, !is.na(outcomes[, 23]) & outcomes[,7] == state, select=cols)
}
## Return hospital name in that state with lowest 30-day death
final <- result[which(result[3] == min(result[3])),1]
return(final)
}
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital <- function(state, outcome, rank) {
## Read outcome data
outcomes <- read.csv('outcome-of-care-measures.csv', colClasses = "character")
## Check that state and outcome are valid
options(warn=-1)
outcomes[, 11] <- as.numeric(outcomes[, 11]) # heart attack
outcomes[, 17] <- as.numeric(outcomes[, 17]) # heart failure
outcomes[, 23] <- as.numeric(outcomes[, 23]) # pneumonia
valid <- c("heart attack", "heart failure", "pneumonia")
if (!outcome %in% valid) {
stop("invalid outcome")
}
if (!state %in% outcomes$State) {
stop("invalid state")
}
## Return hospital name in that state with the given rank
## 30-day death rate
if (outcome == "heart attack") {
cols <- c(colnames(outcomes[2]), colnames(outcomes[7]), colnames(outcomes[11]))
result <- subset(outcomes, !is.na(outcomes[, 11]) & outcomes[,7] == state, select=cols)
result <- result[order(result[,3], result[,1]),]
result$rank <- rank(result[,3], ties.method="first")
}
if (outcome == "heart failure") {
cols <- c(colnames(outcomes[2]), colnames(outcomes[7]), colnames(outcomes[17]))
result <- subset(outcomes, !is.na(outcomes[, 17]) & outcomes[,7] == state, select=cols)
result <- result[order(result[,3], result[,1]),]
result$rank <- rank(result[,3], ties.method="first")
}
if (outcome == "pneumonia") {
cols <- c(colnames(outcomes[2]), colnames(outcomes[7]), colnames(outcomes[23]))
result <- subset(outcomes, !is.na(outcomes[, 23]) & outcomes[,7] == state, select=cols)
result <- result[order(result[,3], result[,1]),]
result$rank <- rank(result[,3], ties.method="first")
}
if (rank == "best") {
rank <- 1
}
if (rank == "worst") {
rank <- length(result[,4])
}
if (rank > length(result[,4])) {
stop("NA")
}
return(result[which(result[4] == rank),1])
}
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
View(r)
as.character(subset(r, State == "HI")$Hospital.Name)
r <- rankall("pneumonia", "worst")
r <- rankall("heart failure", 10)
as.character(subset(r, State == "NV")$Hospital.Name)
outcome <- "pneumonia"
num <- 300
outcomes <- read.csv('outcome-of-care-measures.csv', colClasses = "character")
options(warn=-1)
outcomes[, 11] <- as.numeric(outcomes[, 11]) # heart attack
outcomes[, 17] <- as.numeric(outcomes[, 17]) # heart failure
outcomes[, 23] <- as.numeric(outcomes[, 23]) # pneumonia
cols2 <- c(colnames(outcomes[2]), colnames(outcomes[7]))
valid <- c("heart attack", "heart failure", "pneumonia")
checker <- function(n = num) {
if (num == "worst") {num <<- max(result$rank)}
if (num == "best") {num <<- 1}
if (num > max(result$rank)) {stop("NA")}
}
if (outcome == "heart attack") {
cols <- c(colnames(outcomes[2]), colnames(outcomes[7]), colnames(outcomes[11]))
result <- subset(outcomes, outcomes = "heart attack", select=cols)
result$rank <- ave(result[,3], result[,2], FUN= function(x) rank(x, ties.method = "first"))
checker(num)
result <- result[order(result[,2], result[,4]),]
resultranks <- subset(result, result[,4] == num, select=cols2)
}
View(outcomes)
View(outcomes)
num <- 250
if (outcome == "heart attack") {
cols <- c(colnames(outcomes[2]), colnames(outcomes[7]), colnames(outcomes[11]))
result <- subset(outcomes, outcomes = "heart attack", select=cols)
result$rank <- ave(result[,3], result[,2], FUN= function(x) rank(x, ties.method = "first"))
checker(num)
result <- result[order(result[,2], result[,4]),]
resultranks <- subset(result, result[,4] == num, select=cols2)
}
set.seed(1)
rpois(5, 2)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
